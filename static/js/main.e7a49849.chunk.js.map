{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnimation","transform","animationPercentage","className","duration","currentTime","style","background","color","min","max","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7a49849.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons'\n\nconst Player = ({ currentSong, isPlaying, setIsPlaying, audioRef, songInfo, setSongInfo, songs, setCurrentSong, setSongs }) => {\n    //Event Handlers\n    const activeLibraryHandler = (nextPrev) => {\n        const newSongs = songs.map((song) => {\n            if (song.id === nextPrev.id) {\n                return {\n                    ...song,\n                    active: true,\n                }\n            } else {\n                return {\n                    ...song,\n                    active: false,\n                }\n            }\n        })\n        setSongs(newSongs);\n    }\n    const playSongHandler = () => {\n        isPlaying ? audioRef.current.pause() : audioRef.current.play();\n        setIsPlaying(!isPlaying);\n    };\n    const getTime = (time) => {\n        return(\n            Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n        )\n    }\n\n    const dragHandler = (e) => {\n        audioRef.current.currentTime = e.target.value\n        setSongInfo({...songInfo, currentTime: e.target.value})\n    }\n    const skipTrackHandler = async (direction) => {\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n        if (direction === 'skip-forward') {\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\n        }\n        if (direction === 'skip-back') {\n            if ((currentIndex - 1) % songs.length === -1) {\n                await setCurrentSong(songs[songs.length - 1])\n                activeLibraryHandler(songs[songs.length - 1])\n                if (isPlaying) audioRef.current.play()\n                return\n            }\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length])\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length])\n        }\n        if (isPlaying) audioRef.current.play()\n    }\n    //Add the styles\n    const trackAnimation = {\n        transform: `translateX(${songInfo.animationPercentage}%)`\n    }\n    return (\n        <div className=\"player\">\n            <div className=\"time-control\">\n                <p>{songInfo.duration ? getTime(songInfo.currentTime) : '0:00'}</p>\n                <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`}} className=\"track\">\n                    <input\n                        min={0}\n                        max={songInfo.duration || 0}\n                        value={songInfo.currentTime}\n                        onChange={dragHandler}\n                        type=\"range\" \n                    />\n                    <div style={trackAnimation} className=\"animate-track\"></div>\n                </div>\n                <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\n            </div>\n            <div className=\"play-control\">\n                <FontAwesomeIcon\n                onClick={() => skipTrackHandler('skip-back')}\n                className='skip-back'\n                size='2x'\n                icon={faAngleLeft} />\n                <FontAwesomeIcon\n                onClick={playSongHandler}\n                className='play'\n                size='2x'\n                icon={isPlaying ? faPause : faPlay} />\n                <FontAwesomeIcon\n                onClick={() => skipTrackHandler('skip-forward')}\n                className='skip-forward'\n                size='2x'\n                icon={faAngleRight} />\n            </div>\n        </div>\n    )\n}\n\nexport default Player","import React from 'react'\n\n\nconst Song = ({currentSong}) => {\n    return(\n        <div className=\"song-container\">\n            <img alt={currentSong.name} src={currentSong.cover}/>\n            <h2>{currentSong.name}</h2>\n            <h3>{currentSong.artist}</h3>\n        </div>\n    )\n}\n\nexport default Song","import React from 'react'\n\nconst LibrarySong = ({ song, songs, setCurrentSong, audioRef, id, isPlaying, setSongs }) => {\n    const songSelectHandler = async () => {\n        await setCurrentSong(song)\n        //Add active state\n        const newSongs = songs.map((song) => {\n            if (song.id === id) {\n                return {\n                    ...song,\n                    active: true,\n                }\n            } else {\n                return {\n                    ...song,\n                    active: false,\n                }\n            }\n        })\n        await setSongs(newSongs)\n        //check if song is playing\n        if (isPlaying) audioRef.current.play();\n\n    }\n    return(\n        <div\n        onClick={songSelectHandler}\n        className={`library-song ${song.active ? 'selected' : ''}`}>\n            <img alt={song.name} src={song.cover}/>\n            <div className=\"song-description\">\n                <h3>{song.name}</h3>\n                <h4>{song.artist}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default LibrarySong","import React from 'react'\nimport LibrarySong from './LibrarySong'\n\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus }) => {\n    return(\n        <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\n            <h2>Library</h2>\n            <div className=\"library-songs\">\n                {songs.map((song) => (\n                <LibrarySong\n                key={song.id}\n                songs={songs}\n                song={song}\n                setCurrentSong={setCurrentSong} \n                id={song.id}\n                audioRef={audioRef}\n                isPlaying={isPlaying}\n                setSongs={setSongs} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Library","import React from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faMusic} from '@fortawesome/free-solid-svg-icons'\n\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\n    return(\n        <nav>\n            <h1>Vibes</h1>\n            <button onClick={() => setLibraryStatus(!libraryStatus)} >\n                Library\n                <FontAwesomeIcon icon={faMusic} />\n            </button>\n        </nav>\n    )\n}\n\nexport default Nav","import { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n       name: \"Carefree\",\n       artist: \"dryhope, Gustav Gustav\",\n       cover: \"https://chillhop.com/wp-content/uploads/2020/07/2a048a5780723e66fff64c3a60814ea64761284f-300x300.jpg\",\n       id: uuidv4(),\n       active: false,\n       color: ['#F9CFD0', '#BC2441'],\n       audio: \"https://mp3.chillhop.com/serve.php/?mp3=9311\"\n    },\n    {\n      name: \"Deeper\",\n      cover: \"https://chillhop.com/wp-content/uploads/2020/10/23fdd99adc3e16abcb67b004ea3e748ebf433a49-300x300.jpg\",\n      artist: \"Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10460\",\n      color: [\"#D075BB\", \"#548FCC\"],\n      id: uuidv4(),\n      active: false,\n    }\n  ];\n}\n\nexport default chillHop;","import React, {useState, useRef} from 'react'\n//Style\nimport './styles/app.scss'\n//Components\nimport Player from './components/Player'\nimport Song from './components/Song'\nimport Library from './components/Library'\nimport Nav from './components/Nav'\n//Music Data\nimport data from './data.js'\n\nfunction App() {\n  //Ref\n  const audioRef = useRef(null)\n  //State\n  const [songs, setSongs] = useState(data())\n  const [currentSong, setCurrentSong] = useState(songs[1])\n  const [isPlaying, setIsPlaying] = useState(false)\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  })\n  const [libraryStatus, setLibraryStatus] = useState(false)\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    //calculate percentage\n    const roundedCurrent = Math.round(current)\n    const roundedDuration = Math.round(duration)\n    const animation = Math.round((roundedCurrent / roundedDuration) * 100)\n    setSongInfo({...songInfo, currentTime: current, duration, animationPercentage: animation}) \n }\n const songEndHandler = async () => {\n  let currentIndex = songs.findIndex((song) => song.id === currentSong.id)\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n      if (isPlaying) audioRef.current.play()\n }\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus} \n      />\n      <Song currentSong={currentSong} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong} \n        audioRef={audioRef}\n        songs={songs}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong} \n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus} \n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler} \n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}